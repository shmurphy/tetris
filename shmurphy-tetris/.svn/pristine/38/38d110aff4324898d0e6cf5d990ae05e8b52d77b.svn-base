/*
 * TCSS 305
 * Assignment 6 - Tetris
 */
package gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;

/**
 * 
 * @author Shannon Murphy
 * @version 3 March 2015
 */
public class TetrisGUI {
    
    /** A ToolKit. */
    private static final Toolkit KIT = Toolkit.getDefaultToolkit();
    
    /** The Dimension of the screen. */
    private static final Dimension SCREEN_SIZE = KIT.getScreenSize();
    
    /** The frame for the GUI. */
    private final JFrame myFrame;
    
    /** The Panel where the game is played. */
    private final GamePanel myGamePanel;
    
    /** The next piece that will appear on the board. */
  //  private TetrisPiece myNextPiece;
    
    // Constructor

    /**
     * Constructs a new IntGUI.
     */
    public TetrisGUI() {
        myFrame = new JFrame("305");
        myGamePanel = new GamePanel(); 
    }
    
    /** Displays the GUI. */
    public void start() {
 //       myFrame.add(myGamePanel, BorderLayout.WEST);
        myFrame.add(myGamePanel);
        myFrame.pack();
        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        myFrame.setLocation(SCREEN_SIZE.width / 2 - myFrame.getWidth() / 2,
                            SCREEN_SIZE.height / 2 - myFrame.getHeight() / 2);
        myFrame.setResizable(false);
        myFrame.setVisible(true);
        myFrame.addKeyListener(new MovePieceKeyListener());
    }
    
    /**
     * Listens for keystrokes to move the current piece.
     */
    private class MovePieceKeyListener extends KeyAdapter {

        /**
         * Handles a key being typed.
         * 
         * @param theEvent The KeyEvent generated by the key.
         */
        public void keyPressed(final KeyEvent theEvent) {
            myGamePanel.movePiece(theEvent);
        }
    }
}
